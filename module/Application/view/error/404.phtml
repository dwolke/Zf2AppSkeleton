<h1><?php echo $this->translate('Es trat ein 404 Fehler auf') ?></h1>
<h2><?php echo $this->message ?></h2>

<?php if (isset($this->reason) && $this->reason): ?>

  <?php

    $reasonMessage= '';

    switch ($this->reason) {
      case 'error-controller-cannot-dispatch':
        $reasonMessage = $this->translate('Der angeforderte Controller war nicht in der Lage die Anfrage zu verarbeiten.');
        break;
      case 'error-controller-not-found':
        $reasonMessage = $this->translate('Der angeforderte Controller konnte keiner Controller Klasse zugeordnet werden.');
        break;
      case 'error-controller-invalid':
        $reasonMessage = $this->translate('Der angeforderte Controller ist nicht aufrufbar.');
        break;
      case 'error-router-no-match':
        $reasonMessage = $this->translate('Für die angeforderte URL konnte keine Übereinstimmung gefunden werden.');
        break;
      default:
        $reasonMessage = $this->translate('Zu diesem Zeitpunkt ist es uns nicht möglich zu bestimmen, warum ein 404 Fehler aufgetreten ist.');
        break;
    }
  ?>

  <p><?php echo $reasonMessage ?></p>

<?php endif ?>

<?php if (isset($this->controller) && $this->controller): ?>

  <dl>
    <dt><?php echo $this->translate('Controller') ?>:</dt>
    <dd><?php echo $this->escapeHtml($this->controller) ?>
    <?php
      if (isset($this->controller_class) && $this->controller_class && $this->controller_class != $this->controller) {
        echo '(' . sprintf($this->translate('wird aufgelöst in %s'), $this->escapeHtml($this->controller_class)) . ')';
      }
    ?>
    </dd>
  </dl>

<?php endif ?>

<?php if (isset($this->display_exceptions) && $this->display_exceptions): ?>
  <?php if(isset($this->exception) && $this->exception instanceof Exception): ?>
    <hr/>
    <h2><?php echo $this->translate('Zusätzliche Informationen') ?>:</h2>
    <h3><?php echo get_class($this->exception); ?></h3>
    <dl>
      <dt><?php echo $this->translate('Datei') ?>:</dt>
      <dd><pre class="prettyprint linenums"><?php echo $this->exception->getFile() ?>:<?php echo $this->exception->getLine() ?></pre></dd>
      <dt><?php echo $this->translate('Meldung') ?>:</dt>
      <dd><pre class="prettyprint linenums"><?php echo $this->exception->getMessage() ?></pre></dd>
      <dt><?php echo $this->translate('Stapelüberwachung') ?>:</dt>
      <dd><pre class="prettyprint linenums"><?php echo $this->exception->getTraceAsString() ?></pre></dd>
    </dl>
    <?php
      $e = $this->exception->getPrevious();
      $icount = 0;
      if ($e) :
    ?>
    <hr/>
    <h2><?php echo $this->translate('Vorherige Ausnahmen') ?>:</h2>
    <ul class="unstyled">
    <?php while($e) : ?>
      <li>
        <h3><?php echo get_class($e); ?></h3>
        <dl>
          <dt><?php echo $this->translate('Datei') ?>:</dt>
          <dd><pre class="prettyprint linenums"><?php echo $e->getFile() ?>:<?php echo $e->getLine() ?></pre></dd>
          <dt><?php echo $this->translate('Meldung') ?>:</dt>
          <dd><pre class="prettyprint linenums"><?php echo $e->getMessage() ?></pre></dd>
          <dt><?php echo $this->translate('Stapelüberwachung') ?>:</dt>
          <dd><pre class="prettyprint linenums"><?php echo $e->getTraceAsString() ?></pre></dd>
        </dl>
      </li>
      <?php
        $e = $e->getPrevious();
        $icount += 1;
        if ($icount >=50) {
          echo sprintf($this->translate('Es sind noch weitere Ausnahmen aufgetreten, aber das System verfügt nicht über ausreichend Speicher, um diese anzuzeigen.'), '<li>', '</li>');
          break;
        }
        endwhile;
      ?>
    </ul>
    <?php endif; ?>
  <?php else: ?>
    <h3><?php echo $this->translate('Es ist keine Ausnahme verfügbar') ?></h3>
  <?php endif ?>
<?php endif ?>
